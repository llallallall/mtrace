<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.devowls.dao.EggTradeDAO">

	<select id="selectEggTradeSucceeded" resultType="EggTradeVO">
		<![CDATA[  
			SELECT 
				m.report_time, 
				m.result_code, 
				m.result_msg, 
				m.egg_hist_idx, 
				m.packing_report_date, 
				m.egg_hist_no, 
				m.hist_no_issue_date, 
				m.egg_usage, 
				m.spawning_date, 
				m.reporter_business_no, 
				m.reporter_license_no,
				n.trans_info
			FROM egg_trade m,
				(SELECT 	
					info.egg_hist_idx, 
					GROUP_CONCAT(info.info SEPARATOR '\n\r<br>') AS trans_info
				from (
						SELECT 
						egg_hist_idx, 
						CONCAT(trans_idx,'. ',account_nm, '(' , CONCAT(substring(trans_date, 1, 4),'/',substring(trans_date, 5, 2),'/',substring(trans_date, 7, 2)) ,', ', total_egg,'개, ',(SELECT c.nm 
						FROM code_secondary c where c.parent_cd = "transType" and c.use_yn = "Y" and c.cd = trans_type
						),')')   as info
						FROM egg_trade_detail
					) info
				GROUP BY info.egg_hist_idx
				) n
			WHERE 
				m.egg_hist_idx = n.egg_hist_idx	
			  AND 
			  	m.result_code = "INFO-0000"
		]]> 	  	
	</select>



	<select id="selectAccountListOnTradeUse" parameterType="hashmap" resultType="AccountVO">
		SELECT b.*
			FROM (
				SELECT *
				FROM 
				 	(SELECT 
						ROW_NUMBER() over ( ORDER BY m.reg_date asc, m.business_no asc, m.license_no asc  ) as num,
						ROW_NUMBER() over ( ORDER BY m.reg_date desc, m.business_no desc, m.license_no desc ) as idx,
						m.business_no, 
						m.account_nm, 
						m.account_type,
						(select nm from code_secondary where cd = m.account_type and parent_cd='accounttype' and use_yn = 'Y' )
						 as 'account_type_nm', 
						
						m.license_no, 
						m.ceo_nm, 
						m.address, 
						m.addr_cd, 
						m.post_cd, 
						m.addr_detail, 
						m.addr_type, 
						m.telephone, 
						m.mobile, 
						m.fax, 
						m.remark, 
						m.reg_date, 
						m.trade_use
					FROM 
						mtrace.account_mgmt m
					WHERE 	m.trade_use = "Y"
					) a
				order by a.num asc 
			) b
		where b.idx between #{startrow} and #{startrow}+9	
		 
	</select>

	<select id="selectEggTradeCnt" resultType="int">
		SELECT 
			count(report_time)
		FROM 
			mtrace.egg_trade
	</select>
	
	
	
	
	<select id="selectEggTradeByHistNo" parameterType="String" resultType="HistoryNumberVO">
		SELECT 
			report_time, 
			result_code, 
			result_msg, 
			egg_hist_no, 
			business_no, 
			license_no, 
			farm_id_no, 
			egg_usage, 
			spawning_date, 
			storage_method, 
			egg_xxl, 
			egg_xl, 
			egg_l, 
			egg_m, 
			egg_s, 
			egg_e, 
			washing_method,
			report_date,
			farm_uniq_no
			
		FROM 
			mtrace.history_number
		WHERE
		    egg_hist_no =  #{eggHistNo} 
	</select>
	
	<select id="selectEggTradeRstByHistNo" parameterType="String" resultType="EggTradeInfoVO">
		SELECT 
			m.*, d.*

		FROM 
			 egg_trade m,  egg_trade_detail d
		WHERE
			m.egg_hist_no =  #{eggHistNo} 
		 AND 
		 	m.egg_hist_idx = d.egg_hist_idx
	</select>
	

	<select id="selectEggTrade" parameterType="hashmap" resultType="EggTradeVO">
	<![CDATA[  
		SELECT b.*
			FROM (
				SELECT *
				FROM 
				 	(SELECT 
						ROW_NUMBER() over ( ORDER BY m.report_time asc ) as num,
						ROW_NUMBER() over ( ORDER BY m.report_time desc ) as idx,
						
						m.report_time, 
						m.result_code, 
						m.result_msg, 

						m.egg_hist_no, 
						m.egg_hist_idx, 
						m.spawning_date, 
						m.hist_no_issue_date, 
						m.packing_report_date, 
						
						n.trans_info

					FROM 
						mtrace.egg_trade m,
						(SELECT 	
							info.egg_hist_idx, 
							GROUP_CONCAT(info.info SEPARATOR '<br>') AS trans_info
						from (
								SELECT 
								egg_hist_idx, 
								CONCAT(trans_idx,'. ',account_nm, '(' , CONCAT(substring(trans_date, 1, 4),'/',substring(trans_date, 5, 2),'/',substring(trans_date, 7, 2)) ,', ', total_egg,'개, ',(SELECT c.nm 
								FROM code_secondary c where c.parent_cd = "transType" and c.use_yn = "Y" and c.cd = trans_type
								),')')   as info
								FROM egg_trade_detail
							) info
						GROUP BY info.egg_hist_idx
						) n
					WHERE 
						m.egg_hist_idx = n.egg_hist_idx	
					) a
				order by a.num asc 
			) b
		where b.idx between #{startrow} and #{startrow}+4	
		]]>	
	</select>
	
	
	<select id="selectEggPackingByHistNo" parameterType="String" resultType="EggPackingVO">
			SELECT 
				report_time, 
				result_code, 
				result_msg, 
				business_no, 
				license_no, 
				egg_hist_no, 
				request_date, 
				farm_id_no, 
				egg_usage, 
				spawning_date, 
				storage_method, 
				washing_method, 
				issue_date, 
				client_business_no, 
				client_license_no
		FROM 
			egg_packng
		WHERE 
			egg_hist_no = #{eggHistNo}
	</select>
	
	
	<select id="selectEggHistIdx" parameterType="String" resultType="int">
		SELECT 
			ifnull(	max(	convert(SUBSTRING(egg_hist_idx,11,3), signed integer)	) +1 ,1 ) as idx
		FROM 
			mtrace.egg_trade
		WHERE
			egg_hist_no= #{eggHistNo}	
	</select>
	
	<insert id="insertEggTrade" parameterType="EggTradeVO">
	
		INSERT INTO mtrace.egg_trade
			(	report_time, 
				result_code, 
				result_msg, 
				egg_hist_idx, 
				packing_report_date, 
				egg_hist_no, 
				hist_no_issue_date, 
				egg_usage, 
				spawning_date, 
				reporter_business_no, 
				reporter_license_no
			)
		VALUES
			(	CURRENT_TIMESTAMP(), 
				#{resultCode}, 
				#{resultMsg}, 
				#{eggHistIdx}, 
				#{packingReportDate}, 
				#{eggHistNo},
				#{histNoIssueDate}, 
				#{eggUsage}, 
				#{spawningDate},
				#{reporterBusinessNo}, 
				#{reporterLicenseNo}
			)
	</insert>
	
	
	
	<select id="selectTransIdxByEggHistIdx" parameterType="String" resultType="int">
		SELECT 
			ifnull(	max(	trans_idx	) +1 ,1 ) as idx
		FROM 
			mtrace.egg_trade_detail
		WHERE
			egg_hist_idx= #{eggHistIdx}	
	</select>
	
	
	
	<insert id="insertEggTradeByAccount" parameterType="EggTradeDetailVO">

		INSERT INTO mtrace.egg_trade_detail
			(	egg_hist_idx, 
				trans_idx, 
				account_nm, 
				account_business_no, 
				account_license_no, 
				egg_xxl, 
				egg_xl, 
				egg_l, 
				egg_m, 
				egg_s, 
				egg_e, 
				total_egg, 
				reg_date, 
				mod_date, 
				trans_date, 
				trans_type
			)
		VALUES
			(	#{eggHistIdx}, 
				#{transIdx}, 
				#{accountNm}, 
				#{accountBusinessNo}, 
				#{accountLicenseNo}, 
				#{eggXxl}, 
				#{eggXl}, 
				#{eggL}, 
				#{eggM}, 
				#{eggS}, 
				#{eggE}, 
				#{totalEgg}, 
				current_timestamp(), 
				current_timestamp(), 
				#{transDate}, 
				#{transType}
			)
	</insert>
	
	

</mapper>